/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardSidebarLayoutImport } from './routes/dashboard/_sidebarLayout'
import { Route as DashboardSidebarLayoutIndexImport } from './routes/dashboard/_sidebarLayout/index'
import { Route as DashboardSidebarLayoutUserImport } from './routes/dashboard/_sidebarLayout/user'
import { Route as DashboardSidebarLayoutProductImport } from './routes/dashboard/_sidebarLayout/product'
import { Route as DashboardSidebarLayoutCategoryImport } from './routes/dashboard/_sidebarLayout/category'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()
const authResetPasswordLazyImport = createFileRoute('/(auth)/reset-password')()
const authRegisterLazyImport = createFileRoute('/(auth)/register')()
const authLoginLazyImport = createFileRoute('/(auth)/login')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authResetPasswordLazyRoute = authResetPasswordLazyImport
  .update({
    id: '/(auth)/reset-password',
    path: '/reset-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/reset-password.lazy').then((d) => d.Route),
  )

const authRegisterLazyRoute = authRegisterLazyImport
  .update({
    id: '/(auth)/register',
    path: '/register',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/register.lazy').then((d) => d.Route))

const authLoginLazyRoute = authLoginLazyImport
  .update({
    id: '/(auth)/login',
    path: '/login',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/login.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const DashboardSidebarLayoutRoute = DashboardSidebarLayoutImport.update({
  id: '/_sidebarLayout',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSidebarLayoutIndexRoute =
  DashboardSidebarLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardSidebarLayoutRoute,
  } as any)

const DashboardSidebarLayoutUserRoute = DashboardSidebarLayoutUserImport.update(
  {
    id: '/user',
    path: '/user',
    getParentRoute: () => DashboardSidebarLayoutRoute,
  } as any,
)

const DashboardSidebarLayoutProductRoute =
  DashboardSidebarLayoutProductImport.update({
    id: '/product',
    path: '/product',
    getParentRoute: () => DashboardSidebarLayoutRoute,
  } as any)

const DashboardSidebarLayoutCategoryRoute =
  DashboardSidebarLayoutCategoryImport.update({
    id: '/category',
    path: '/category',
    getParentRoute: () => DashboardSidebarLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_sidebarLayout': {
      id: '/dashboard/_sidebarLayout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardSidebarLayoutImport
      parentRoute: typeof DashboardRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_sidebarLayout/category': {
      id: '/dashboard/_sidebarLayout/category'
      path: '/category'
      fullPath: '/dashboard/category'
      preLoaderRoute: typeof DashboardSidebarLayoutCategoryImport
      parentRoute: typeof DashboardSidebarLayoutImport
    }
    '/dashboard/_sidebarLayout/product': {
      id: '/dashboard/_sidebarLayout/product'
      path: '/product'
      fullPath: '/dashboard/product'
      preLoaderRoute: typeof DashboardSidebarLayoutProductImport
      parentRoute: typeof DashboardSidebarLayoutImport
    }
    '/dashboard/_sidebarLayout/user': {
      id: '/dashboard/_sidebarLayout/user'
      path: '/user'
      fullPath: '/dashboard/user'
      preLoaderRoute: typeof DashboardSidebarLayoutUserImport
      parentRoute: typeof DashboardSidebarLayoutImport
    }
    '/dashboard/_sidebarLayout/': {
      id: '/dashboard/_sidebarLayout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardSidebarLayoutIndexImport
      parentRoute: typeof DashboardSidebarLayoutImport
    }
  }
}

// Create and export the route tree

interface DashboardSidebarLayoutRouteChildren {
  DashboardSidebarLayoutCategoryRoute: typeof DashboardSidebarLayoutCategoryRoute
  DashboardSidebarLayoutProductRoute: typeof DashboardSidebarLayoutProductRoute
  DashboardSidebarLayoutUserRoute: typeof DashboardSidebarLayoutUserRoute
  DashboardSidebarLayoutIndexRoute: typeof DashboardSidebarLayoutIndexRoute
}

const DashboardSidebarLayoutRouteChildren: DashboardSidebarLayoutRouteChildren =
  {
    DashboardSidebarLayoutCategoryRoute: DashboardSidebarLayoutCategoryRoute,
    DashboardSidebarLayoutProductRoute: DashboardSidebarLayoutProductRoute,
    DashboardSidebarLayoutUserRoute: DashboardSidebarLayoutUserRoute,
    DashboardSidebarLayoutIndexRoute: DashboardSidebarLayoutIndexRoute,
  }

const DashboardSidebarLayoutRouteWithChildren =
  DashboardSidebarLayoutRoute._addFileChildren(
    DashboardSidebarLayoutRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardSidebarLayoutRoute: typeof DashboardSidebarLayoutRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardSidebarLayoutRoute: DashboardSidebarLayoutRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardSidebarLayoutRouteWithChildren
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/login': typeof authLoginLazyRoute
  '/register': typeof authRegisterLazyRoute
  '/reset-password': typeof authResetPasswordLazyRoute
  '/dashboard/category': typeof DashboardSidebarLayoutCategoryRoute
  '/dashboard/product': typeof DashboardSidebarLayoutProductRoute
  '/dashboard/user': typeof DashboardSidebarLayoutUserRoute
  '/dashboard/': typeof DashboardSidebarLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardSidebarLayoutIndexRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/login': typeof authLoginLazyRoute
  '/register': typeof authRegisterLazyRoute
  '/reset-password': typeof authResetPasswordLazyRoute
  '/dashboard/category': typeof DashboardSidebarLayoutCategoryRoute
  '/dashboard/product': typeof DashboardSidebarLayoutProductRoute
  '/dashboard/user': typeof DashboardSidebarLayoutUserRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_sidebarLayout': typeof DashboardSidebarLayoutRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/login': typeof authLoginLazyRoute
  '/(auth)/register': typeof authRegisterLazyRoute
  '/(auth)/reset-password': typeof authResetPasswordLazyRoute
  '/dashboard/_sidebarLayout/category': typeof DashboardSidebarLayoutCategoryRoute
  '/dashboard/_sidebarLayout/product': typeof DashboardSidebarLayoutProductRoute
  '/dashboard/_sidebarLayout/user': typeof DashboardSidebarLayoutUserRoute
  '/dashboard/_sidebarLayout/': typeof DashboardSidebarLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/dashboard/category'
    | '/dashboard/product'
    | '/dashboard/user'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/dashboard/category'
    | '/dashboard/product'
    | '/dashboard/user'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/_sidebarLayout'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(auth)/reset-password'
    | '/dashboard/_sidebarLayout/category'
    | '/dashboard/_sidebarLayout/product'
    | '/dashboard/_sidebarLayout/user'
    | '/dashboard/_sidebarLayout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authLoginLazyRoute: typeof authLoginLazyRoute
  authRegisterLazyRoute: typeof authRegisterLazyRoute
  authResetPasswordLazyRoute: typeof authResetPasswordLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authLoginLazyRoute: authLoginLazyRoute,
  authRegisterLazyRoute: authRegisterLazyRoute,
  authResetPasswordLazyRoute: authResetPasswordLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/(auth)/forgot-password",
        "/(auth)/login",
        "/(auth)/register",
        "/(auth)/reset-password"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_sidebarLayout"
      ]
    },
    "/dashboard/_sidebarLayout": {
      "filePath": "dashboard/_sidebarLayout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_sidebarLayout/category",
        "/dashboard/_sidebarLayout/product",
        "/dashboard/_sidebarLayout/user",
        "/dashboard/_sidebarLayout/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.lazy.tsx"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.lazy.tsx"
    },
    "/(auth)/reset-password": {
      "filePath": "(auth)/reset-password.lazy.tsx"
    },
    "/dashboard/_sidebarLayout/category": {
      "filePath": "dashboard/_sidebarLayout/category.tsx",
      "parent": "/dashboard/_sidebarLayout"
    },
    "/dashboard/_sidebarLayout/product": {
      "filePath": "dashboard/_sidebarLayout/product.tsx",
      "parent": "/dashboard/_sidebarLayout"
    },
    "/dashboard/_sidebarLayout/user": {
      "filePath": "dashboard/_sidebarLayout/user.tsx",
      "parent": "/dashboard/_sidebarLayout"
    },
    "/dashboard/_sidebarLayout/": {
      "filePath": "dashboard/_sidebarLayout/index.tsx",
      "parent": "/dashboard/_sidebarLayout"
    }
  }
}
ROUTE_MANIFEST_END */
